# -*- coding: utf-8 -*-
# @Time    : 2023/2/11 14:32
# @Author  : jinjie
# @File    : 006_动态规划_背包问题.py
"""
问题描述：有一个背包可以装物品的总重量为W，现有N个物品，
每个物品中w[i]，价值v[i]，用背包装物品，能装的最大价值是多少？
"""

"""#思路
定义状态转移数组dp[i][j]，表示前i个物品，背包重量为j的情况下能装的最大价值。
例如，dp[3][4]=6，表示用前3个物品装入重量为4的背包所能获得的最大价值为6，
此时并不是3个物品全部装入，而是3个物品满足装入背包的条件下的最大价值。
状态转移方程：
dp[i][j] = max(dp[i-1][j], dp[i-1][j-w[i]]+v[i])
dp[i-1][j]表示当前物品不放入背包，dp[i-1][j-w[i]]+v[i]表示当前物品放入背包，
即当前第i个物品要么放入背包，要么不放入背包。
"""


# 创建二维数组dp
dp = [[0]*(n+1) for _ in range(m+1)]

for i in range(1,m+1):
    for j in range(1,n+1):
        if j-w[i] >= 0:
            dp[i][j] = max(dp[i-1][j],dp[i-1][j-w[i]]+v[i])

